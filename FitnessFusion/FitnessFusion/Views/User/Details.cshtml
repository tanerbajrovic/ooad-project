<!--removed model User - only one model allowed-->
@model FitnessFusion.Models.Result

@{
    ViewData["Title"] = "Details";
}
<html>
    <head>
    <style data-tag="reset-style-sheet">
        html {
            line-height: 1.15;
        }

        body {
            margin: 0;
        }

        * {
            box-sizing: border-box;
            border-width: 0;
            border-style: solid;
        }

        p, li, ul, pre, div, h1, h2, h3, h4, h5, h6, figure, blockquote, figcaption {
            margin: 0;
            padding: 0;
        }

        button {
            background-color: transparent;
        }

        button, input, optgroup, select, textarea {
            font-family: inherit;
            font-size: 100%;
            line-height: 1.15;
            margin: 0;
        }

        button, select {
            text-transform: none;
        }

        button, [type="button"], [type="reset"], [type="submit"] {
            -webkit-appearance: button;
        }

            button::-moz-focus-inner, [type="button"]::-moz-focus-inner, [type="reset"]::-moz-focus-inner, [type="submit"]::-moz-focus-inner {
                border-style: none;
                padding: 0;
            }

            button:-moz-focus, [type="button"]:-moz-focus, [type="reset"]:-moz-focus, [type="submit"]:-moz-focus {
                outline: 1px dotted ButtonText;
            }

        a {
            color: inherit;
            text-decoration: inherit;
        }

        input {
            padding: 2px 4px;
        }

        img {
            display: block;
        }

        html {
            scroll-behavior: smooth
        }
    </style>
    <style data-tag="default-style-sheet">
        html {
            font-family: Inter;
            font-size: 16px;
        }

        body {
            font-weight: 400;
            font-style: normal;
            text-decoration: none;
            text-transform: none;
            letter-spacing: normal;
            line-height: 1.15;
            background-color: #000000;
        }
    </style>
  
    </head>
    <body>
        <div>
            <link href="~/css/result.css" rel="stylesheet" />
            <link rel="stylesheet" href="~/css/style4.css">


        <link href="~/css/circle.css" rel="stylesheet" />

        <div class="flex-wrapper">
            <div class="single-chart">
                <svg viewBox="0 0 36 36" class="circular-chart orange">
                    <path class="circle-bg"
                          d="M18 2.0845
              a 15.9155 15.9155 0 0 1 0 31.831
              a 15.9155 15.9155 0 0 1 0 -31.831" />
                    <path class="circle"
                          stroke-dasharray="30, 100"
                          d="M18 2.0845
              a 15.9155 15.9155 0 0 1 0 31.831
              a 15.9155 15.9155 0 0 1 0 -31.831" />
                    <text x="18" y="20.35" class="percentage">
                        
                        @Html.DisplayFor(model => model.bodyFatPercentage)%
                    </text>
                </svg>
                </br></br></br></br>
                <span style="color:white;">@Html.DisplayNameFor(model => model.bodyFatPercentage)</span>
            </div>


        </div>

        <div id="box2" class="result-container4">
            <span style="color:#FFFFFF" class="result-text">

                </br></br>
                @Html.DisplayNameFor(model => model.BenchPress):
                @Html.DisplayFor(model => model.BenchPress)
                </br></br>
                @Html.DisplayNameFor(model => model.Squat):
                @Html.DisplayFor(model => model.Squat)
                </br></br>
                @Html.DisplayNameFor(model => model.AbsTest):
                @Html.DisplayFor(model => model.AbsTest)
                </br></br>
                @Html.DisplayNameFor(model => model.PushUps):
                @Html.DisplayFor(model => model.PushUps)
                </br></br>
                @Html.DisplayNameFor(model => model.SprintRunning):
                @Html.DisplayFor(model => model.SprintRunning)
                </br></br>
                @Html.DisplayNameFor(model => model.Running):
                @Html.DisplayFor(model => model.Running)
                </br></br>
                @Html.DisplayNameFor(model => model.VerticalJump):
                @Html.DisplayFor(model => model.VerticalJump)
                </br></br>
                @Html.DisplayNameFor(model => model.HorizontalJump):
                @Html.DisplayFor(model => model.HorizontalJump)
                SPECIAL RESULT:
                </br></br></br></br>
                @Html.DisplayNameFor(model => model.Mass):
                @Html.DisplayFor(model => model.Mass)
                </br></br>
                @Html.DisplayNameFor(model => model.Calories):
                @Html.DisplayFor(model => model.Calories)
                </br></br>
                @Html.DisplayNameFor(model => model.BMI):
                @Html.DisplayFor(model => model.BMI)
                </br></br>
                @Html.DisplayNameFor(model => model.BMR):  
                @Html.DisplayFor(model => model.BMR)
                </br></br>

            </span>
        </div>
        </div>
    </body>

</html>   